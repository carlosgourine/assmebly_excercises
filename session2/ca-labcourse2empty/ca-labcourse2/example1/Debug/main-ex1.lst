STMicroelectronics list file postprocessor v1.01   (C)2009-2025   Sun Mar 09 19:11:45 2025
Page 1  Assembler
                                               e:\idrive\ca-labcourse\example1\main-ex1.asm

   1                         stm8/     
   2                         
   0  000000                                 #include "mapping.inc"
   1                                                          ;-------------------------------
                                                                ;-----------------------
   2                                                          ; SEGMENT MAPPING FILE 
                                                                ;AUTOMATICALLY GENERATED BY 
                                                                ;STVD
   3                                                          ; SHOULD NOT BE MANUALLY 
                                                                ;MODIFIED.
   4                                                          ; CHANGES WILL BE LOST WHEN FILE
                                                                ; IS REGENERATED.
   5                                                          ;-------------------------------
                                                                ;-----------------------
   6  000000                                 #define  RAM0 1
   7  000000                                 #define  ram0_segment_start 0
   8  000000                                 #define  ram0_segment_end FF
   9  000000                                 #define  RAM1 1
  10  000000                                 #define  ram1_segment_start 100
  11  000000                                 #define  ram1_segment_end 5FF
  12  000000                                 #define  stack_segment_start 600
  13  000000                                 #define  stack_segment_end 7FF
<END_OF_INCLUSION>
   4                                   segment  'ram0'
   5  000000                       myarray   ds.w     10
   6  000014                       mycounter  ds.b     
   7                         
   8                                   segment  'rom'
   9  008080   48656C6C6F20576F    
   9  008088   726C6421            mystring  dc.b     "Hello World!"
  10                         
  11                         main.l    
  12                                                          ; initialize SP
  13  00808C   AE07FF                        ldw      X,#stack_end
  14  00808F   94                            ldw      SP,X
  15                         
  16  008090                                 #ifdef   1             
  17                                                          ; clear RAM0
  18  000000                       ram0_start.b  EQU      $0
  19  0000FF                       ram0_end.b  EQU      $FF
  20  008090   AE0000                        ldw      X,#ram0_start
  21                         clear_ram0.l  
  22  008093   7F                            clr      (X)
  23  008094   5C                            incw     X
  24  008095   A300FF                        cpw      X,#ram0_end   
  25  008098   23F9                          jrule    clear_ram0
  26  00809A                                 #endif   
  27                         
  28  00809A                                 #ifdef   1
  29                                                          ; clear RAM1
  30  000100                       ram1_start.w  EQU      $100
  31  0005FF                       ram1_end.w  EQU      $5FF          
  32  00809A   AE0100                        ldw      X,#ram1_start
  33                         clear_ram1.l  
  34  00809D   7F                            clr      (X)
  35  00809E   5C                            incw     X
  36  00809F   A305FF                        cpw      X,#ram1_end   
  37  0080A2   23F9                          jrule    clear_ram1
STMicroelectronics list file postprocessor v1.01   (C)2009-2025   Sun Mar 09 19:11:45 2025
Page 2  Assembler
                                               e:\idrive\ca-labcourse\example1\main-ex1.asm

  38  0080A4                                 #endif   
  39                         
  40                                                          ; clear stack
  41  000600                       stack_start.w  EQU      $600
  42  0007FF                       stack_end.w  EQU      $7FF
  43  0080A4   AE0600                        ldw      X,#stack_start
  44                         clear_stack.l  
  45  0080A7   7F                            clr      (X)
  46  0080A8   5C                            incw     X
  47  0080A9   A307FF                        cpw      X,#stack_end  
  48  0080AC   23F9                          jrule    clear_stack
  49                         
  50  0080AE   35570014                      mov      mycounter , # 87
  51                         infinite_loop.l  
  52  0080B2   725C0014                      inc      mycounter
  53  0080B6   20FA                          jra      infinite_loop
  54                         
  55  0080B8                                 interrupt NonHandledInterrupt
  56                         NonHandledInterrupt.l  
  57  0080B8   80                            iret     
  58                         
  59                                   segment  'vectit'
  60  008000   8200808C                      dc.l     {$82000000+main}  ; reset
  61  008004   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; trap
  62  008008   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq0
  63  00800C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq1
  64  008010   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq2
  65  008014   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq3
  66  008018   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq4
  67  00801C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq5
  68  008020   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq6
  69  008024   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq7
  70  008028   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq8
  71  00802C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq9
  72  008030   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq10
  73  008034   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq11
  74  008038   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq12
  75  00803C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq13
  76  008040   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq14
  77  008044   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq15
  78  008048   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq16
  79  00804C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq17
  80  008050   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq18
  81  008054   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq19
  82  008058   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq20
  83  00805C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq21
  84  008060   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq22
  85  008064   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq23
  86  008068   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq24
  87  00806C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq25
  88  008070   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq26
  89  008074   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq27
  90  008078   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq28
  91  00807C   820080B8                      dc.l     {$82000000+NonHandledInterrupt}  ; irq29
  92                         
  93  008080                                 end      
STMicroelectronics list file postprocessor v1.01   (C)2009-2025   Sun Mar 09 19:11:45 2025
Page 3  Assembler
                                               e:\idrive\ca-labcourse\example1\main-ex1.asm

Symbol Name                       Value     Call       Type  Scope      Rel.  Line  Privacy  Segment   Size  Bytes File

NonHandledInterrupt               000080B8  interrupt  LONG  Internal   ABS     56  private  textdata     1     0  -

clear_ram0                        00008093         no  LONG  Internal   ABS     21  private  textdata    10     0  -
clear_ram1                        0000809D         no  LONG  Internal   ABS     33  private  textdata    10     0  -
clear_stack                       000080A7         no  LONG  Internal   ABS     44  private  textdata    11     0  -

infinite_loop                     000080B2         no  LONG  Internal   ABS     51  private  textdata     6     0  -

myarray                               0000         no  WORD  Internal   ABS      5  private  bss         20     2  -
mycounter                             0014         no  WORD  Internal   ABS      6  private  bss          1     1  -
mystring                              8080         no  WORD  Internal   ABS      9  private  textdata    12     1  -
main                              0000808C         no  LONG  Internal   ABS     11  private  textdata     7     0  -

ram0_start                              00         no  BYTE  Internal   ABS     18  private  textdata     0     0  -
ram0_end                                FF         no  BYTE  Internal   ABS     19  private  textdata     0     0  -
ram1_start                            0100         no  WORD  Internal   ABS     30  private  textdata     0     0  -
ram1_end                              05FF         no  WORD  Internal   ABS     31  private  textdata     0     0  -

stack_start                           0600         no  WORD  Internal   ABS     41  private  textdata     0     0  -
stack_end                             07FF         no  WORD  Internal   ABS     42  private  textdata     0     0  -


15 labels
No errors on assembly of 'e:\idrive\ca-labcourse\example1\main-ex1.asm'